-- Abriendo la base de datos del sistema
use master
go

-- Creando la base de datos del proyecto
create database ProyectoDP_FoodChain
go

-- Abriendo la base de datos del proyecto
use ProyectoDP_FoodChain
go

-- Cambiando el formato de la fecha (dia, mes, año)
set dateformat dmy
go

-- Creando las tablas

/* Tabla Usuarios: Esta tabla almacenará los datos de los usuarios del sistema (supermercados, restaurantes, hogares, organizaciones sin fines 
de lucro, etc.*/
CREATE TABLE Usuarios (
    UsuarioID INT PRIMARY KEY IDENTITY,
    Nombre NVARCHAR(100),
    TipoUsuario NVARCHAR(50), -- Supermercado, Restaurante, Hogar, Organización
    Email NVARCHAR(100),
    Telefono NVARCHAR(20),
    Direccion NVARCHAR(255)
);
go

-- Ingresando valores a la tabla Usuarios
INSERT INTO Usuarios (Nombre, TipoUsuario, Email, Telefono, Direccion) VALUES 
('Supermercado A', 'Supermercado', 'contacto@supera.com', '987654321', 'Av. Principal 123'),
('Restaurante B', 'Restaurante', 'info@restauranteb.com', '987654322', 'Calle Secundaria 456'),
('Hogar C', 'Hogar', 'hogarc@gmail.com', '987654323', 'Calle Terciaria 789'),
('ONG Alimentos', 'Organización', 'contacto@ongalimentos.org', '987654324', 'Av. Solidaridad 101'),
('Banco de Alimentos D', 'Organización', 'info@bancoalimentosd.org', '987654325', 'Av. Recojo 202'),
('Restaurante E', 'Restaurante', 'info@restaurantee.com', '987654326', 'Calle Progreso 303'),
('Supermercado F', 'Supermercado', 'contacto@superf.com', '987654327', 'Av. Victoria 404'),
('ONG Solidaridad', 'Organización', 'info@ongsolidaridad.org', '987654328', 'Av. Comunidad 505'),
('Hogar G', 'Hogar', 'hogarg@gmail.com', '987654329', 'Calle Esperanza 606'),
('Restaurante H', 'Restaurante', 'info@restauranteh.com', '987654330', 'Av. Sazón 707');

-- Mostrando las columnas de la tabla Usuarios
select * from Usuarios;
go

-- Creando un procedimiento almacenado para insertar un Usuario
CREATE PROCEDURE InsertarUsuario
    @Nombre NVARCHAR(100),
    @TipoUsuario NVARCHAR(50),
    @Email NVARCHAR(100),
    @Telefono NVARCHAR(20),
    @Direccion NVARCHAR(255)
AS
BEGIN
    INSERT INTO Usuarios (Nombre, TipoUsuario, Email, Telefono, Direccion)
    VALUES (@Nombre, @TipoUsuario, @Email, @Telefono, @Direccion);
END;
GO


/* Tabla Excedentes: Esta tabla almacenará los alimentos excedentes que serán donados.*/
CREATE TABLE Excedentes (
    ExcedenteID INT PRIMARY KEY IDENTITY,
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    Descripcion NVARCHAR(255),
    Cantidad DECIMAL(10, 2),
    UnidadMedida NVARCHAR(50), -- Kg, Litros, etc.
    FechaCreacion DATETIME,
    FechaCaducidad DATETIME,
    Estado NVARCHAR(50) -- Disponible, Asignado, Recogido, etc.
);
go

-- Ingresando valores a la tabla Excedentes
INSERT INTO Excedentes (UsuarioID, Descripcion, Cantidad, UnidadMedida, FechaCreacion, FechaCaducidad, Estado) VALUES
(1, 'Tomates Frescos', 50, 'Kg', '01-09-2024', '05-09-2024', 'Disponible'),
(2, 'Pan del Día', 30, 'Kg', '01-09-2024', '02-09-2024', 'Disponible'),
(3, 'Leche Pasteurizada', 100, 'Litros', '02-09-2024', '08-09-2024', 'Asignado'),
(1, 'Carne de Res', 20, 'Kg', '03-09-2024', '05-09-2024', 'Disponible'),
(4, 'Frutas Variadas', 75, 'Kg', '03-09-2024', '10-09-2024', 'Disponible'),
(5, 'Verduras', 40, 'Kg', '04-09-2024', '08-09-2024', 'Disponible'),
(6, 'Sopas en Lata', 200, 'Unidades', '04-09-2024', '30-12-2024', 'Disponible'),
(7, 'Harina de Trigo', 150, 'Kg', '05-09-2024', '15-09-2024', 'Disponible'),
(8, 'Pollo', 25, 'Kg', '06-09-2024', '10-09-2024', 'Disponible'),
(9, 'Queso', 50, 'Kg', '07-09-2024', '12-09-2024', 'Disponible');

-- Mostrando las columnas de la tabla Excedentes
select * from Excedentes;
go

-- Creando un procedimiento almacenado para insertar un Excedente
CREATE PROCEDURE InsertarExcedente
    @UsuarioID INT,
    @Descripcion NVARCHAR(255),
    @Cantidad DECIMAL(10, 2),
    @UnidadMedida NVARCHAR(50),
    @FechaCreacion DATETIME,
    @FechaCaducidad DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Excedentes (UsuarioID, Descripcion, Cantidad, UnidadMedida, FechaCreacion, FechaCaducidad, Estado)
    VALUES (@UsuarioID, @Descripcion, @Cantidad, @UnidadMedida, @FechaCreacion, @FechaCaducidad, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar excedentes por Estado
CREATE PROCEDURE ObtenerExcedentesPorEstado
	@Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Excedentes WHERE Estado = @Estado;
END;
GO


/* Tabla Donaciones: Esta tabla almacena las donaciones emparejadas entre los donadores (usuarios que tienen excedentes) y las organizaciones 
receptoras.*/
CREATE TABLE Donaciones (
    DonacionID INT PRIMARY KEY IDENTITY,
    ExcedenteID INT FOREIGN KEY REFERENCES Excedentes(ExcedenteID),
    OrganizacionID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    FechaAsignacion DATETIME,
    FechaRecoleccion DATETIME,
    Estado NVARCHAR(50) -- Asignado, Recolectado, Distribuido
);
go

-- Ingresando valores a la tabla Donaciones
INSERT INTO Donaciones (ExcedenteID, OrganizacionID, FechaAsignacion, FechaRecoleccion, Estado) VALUES
(1, 4, '01-09-2024', '02-09-2024', 'Asignado'),
(2, 5, '02-09-2024', '03-09-2024', 'Recolectado'),
(3, 4, '03-09-2024', '04-09-2024', 'Distribuido'),
(4, 5, '03-09-2024', '04-09-2024', 'Asignado'),
(5, 4, '04-09-2024', '05-09-2024', 'Recolectado'),
(6, 5, '04-09-2024', '06-09-2024', 'Distribuido'),
(7, 4, '05-09-2024', '06-09-2024', 'Asignado'),
(8, 5, '06-09-2024', '07-09-2024', 'Recolectado'),
(9, 4, '07-09-2024', '08-09-2024', 'Distribuido'),
(10, 5, '08-09-2024', '09-09-2024', 'Asignado');

-- Mostrando las columnas de la tabla Donaciones
select * from Donaciones;
go

-- Creando un procedimiento almacenado para insertar una Donación
CREATE PROCEDURE InsertarDonacion
    @ExcedenteID INT,
    @OrganizacionID INT,
    @FechaAsignacion DATETIME,
    @FechaRecoleccion DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Donaciones (ExcedenteID, OrganizacionID, FechaAsignacion, FechaRecoleccion, Estado)
    VALUES (@ExcedenteID, @OrganizacionID, @FechaAsignacion, @FechaRecoleccion, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar donaciones por Estado
CREATE PROCEDURE ObtenerDonacionesPorEstado
    @Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Donaciones WHERE Estado = @Estado;
END;
GO


/* Tabla Organizaciones: Aunque las organizaciones ya están registradas en la tabla de Usuarios, podrías tener una tabla específica para 
información adicional de las organizaciones, si es necesario.*/
CREATE TABLE Organizaciones (
    OrganizacionID INT PRIMARY KEY FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    TipoOrganizacion NVARCHAR(100), -- Banco de Alimentos, ONG, etc.
    AreaCobertura NVARCHAR(255) -- Ciudades o áreas donde operan
);
go

-- Ingresando valores a la tabla Organizaciones
INSERT INTO Organizaciones (OrganizacionID, TipoOrganizacion, AreaCobertura) VALUES
(1, 'ONG', 'Lima, Callao'),
(2, 'Banco de Alimentos', 'Lima Metropolitana'),
(3, 'ONG', 'Lima Norte'),
(4, 'ONG', 'Lima Sur'),
(5, 'Banco de Alimentos', 'Callao, Lima Este'),
(6, 'ONG', 'Lima Centro'),
(7, 'Banco de Alimentos', 'Callao'),
(8, 'ONG', 'Lima, Callao'),
(9, 'Banco de Alimentos', 'Lima Metropolitana'),
(10, 'ONG', 'Lima Norte');

-- Mostrando las columnas de la tabla Organizaciones
select * from Organizaciones;
go

-- Creando un procedimiento almacenado para consultar las organizaciones por el Tipo de Organización
CREATE PROCEDURE ObtenerOrganizacionPorTipoDeOrganizacion
	@TipoOrganizacion NVARCHAR(100)
AS
BEGIN 
	SELECT * FROM Organizaciones WHERE TipoOrganizacion = @TipoOrganizacion;
END;
GO


/* Tabla Recompensas: Almacena las recompensas asignadas a los usuarios en función de sus donaciones. Los puntos otorgados se calculan en base 
a la cantidad de alimentos donados, y cada recompensa está vinculada a una donación específica y a un usuario.*/
CREATE TABLE Recompensas (
    RecompensaID INT PRIMARY KEY IDENTITY,
    DonacionID INT FOREIGN KEY REFERENCES Donaciones(DonacionID),
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    Puntos INT, -- Los puntos se calcularán en base a la cantidad donada
    FechaOtorgacion DATETIME
);
go

-- Ingresando valores a la tabla Recompensas
INSERT INTO Recompensas (DonacionID, UsuarioID, Puntos, FechaOtorgacion) VALUES
(1, 1, 500, '02-09-2024'),
(2, 2, 300, '03-09-2024'),
(3, 3, 1000, '04-09-2024'),
(4, 4, 200, '05-09-2024'),
(5, 5, 800, '06-09-2024'),
(6, 6, 150, '07-09-2024'),
(7, 7, 450, '08-09-2024'),
(8, 8, 600, '09-09-2024'),
(9, 9, 350, '10-09-2024'),
(10, 10, 900, '11-09-2024');

-- Mostrando las columnas de la tabla Recompensas
select * from Recompensas;
go

-- Creando un procedimiento almacenado para insertar una Recompensa
CREATE PROCEDURE InsertarRecompensa
    @DonacionID INT,
    @UsuarioID INT,
    @Puntos INT,
    @FechaOtorgacion DATETIME
AS
BEGIN
    INSERT INTO Recompensas (DonacionID, UsuarioID, Puntos, FechaOtorgacion)
    VALUES (@DonacionID, @UsuarioID, @Puntos, @FechaOtorgacion);
END;
GO

-- Creando un procedimiento almacenado para consultar recompensas de un Usuario.
CREATE PROCEDURE ObtenerRecompensasPorUsuario
    @UsuarioID INT
AS
BEGIN
    SELECT * FROM Recompensas WHERE UsuarioID = @UsuarioID;
END;
GO


/*Tabla RangosDeRecompensas:  define los rangos de puntos necesarios para obtener diferentes tipos de recompensas, ya sean físicas o no físicas. 
Cada rango tiene un intervalo de puntos y describe el tipo y la naturaleza de la recompensa.*/
CREATE TABLE RangosDeRecompensas (
    RangoID INT PRIMARY KEY IDENTITY,
    MinPuntos INT, -- Mínimo de puntos requerido para obtener la recompensa
    MaxPuntos INT, -- Máximo de puntos que puede cubrir este rango
    TipoRecompensa NVARCHAR(50), -- Física o No Física
    Descripcion NVARCHAR(255) -- Descripción de la recompensa
);
go

-- Ingresando valores a la tabla RangosDeRecompensas
INSERT INTO RangosDeRecompensas (MinPuntos, MaxPuntos, TipoRecompensa, Descripcion) VALUES
(0, 100, 'No Física', 'Descuento en la tienda en línea'),
(101, 300, 'No Física', 'Mención en la página web'),
(301, 500, 'Física', 'Bolsa reutilizable'),
(501, 700, 'Física', 'Camisa personalizada de FoodChain'),
(701, 1000, 'No Física', 'Certificado de agradecimiento digital'),
(1001, 1500, 'Física', 'Cuaderno ecológico'),
(1501, 2000, 'Física', 'Canasta de productos orgánicos'),
(2001, 2500, 'No Física', 'Acceso a eventos especiales de FoodChain'),
(2501, 3000, 'Física', 'Kit de cocina sostenible'),
(3001, 5000, 'Física', 'Set de utensilios ecológicos');

-- Mostrando las columnas de la tabla RangosDeRecompensas
select * from RangosDeRecompensas;
go

-- Creando un procedimiento almacenado para consultar rangos de recompensas por el Tipo de Recompensa
CREATE PROCEDURE ObtenerRangosPorTipoDeRecompensa
	@TipoRecompensa NVARCHAR(50)
AS
BEGIN
	SELECT * FROM RangosDeRecompensas WHERE TipoRecompensa = @TipoRecompensa;
END;
GO


/* Tabla Rutas: Esta tabla gestionará las rutas de distribución de alimentos.*/
CREATE TABLE Rutas (
    RutaID INT PRIMARY KEY IDENTITY,
    DonacionID INT FOREIGN KEY REFERENCES Donaciones(DonacionID),
    Conductor NVARCHAR(100),
    Vehiculo NVARCHAR(50),
    FechaInicio DATETIME,
    FechaFin DATETIME,
    Estado NVARCHAR(50) -- Planificado, En Progreso, Completado
);
go

-- Ingresando valores a la tabla Rutas
INSERT INTO Rutas (DonacionID, Conductor, Vehiculo, FechaInicio, FechaFin, Estado) VALUES
(1, 'Juan Pérez', 'Camión 123', '02-09-2024', '02-09-2024', 'Completado'),
(2, 'Luis Gómez', 'Camión 456', '03-09-2024', '03-09-2024', 'Completado'),
(3, 'Pedro Ramírez', 'Camión 789', '04-09-2024', '04-09-2024', 'Completado'),
(4, 'Carlos Díaz', 'Camioneta 321', '05-09-2024', '05-09-2024', 'En Progreso'),
(5, 'Miguel Torres', 'Camioneta 654', '06-09-2024', '06-09-2024', 'Planificado'),
(6, 'José Santos', 'Camión 987', '07-09-2024', '07-09-2024', 'Planificado'),
(7, 'Ricardo Flores', 'Furgón 111', '08-09-2024', '08-09-2024', 'Completado'),
(8, 'María Castro', 'Furgón 222', '09-09-2024', '09-09-2024', 'Completado'),
(9, 'Ana Morales', 'Camión 333', '10-09-2024', '10-09-2024', 'En Progreso'),
(10, 'Roberto Pérez', 'Camioneta 444', '11-09-2024', '11-09-2024', 'Planificado');

-- Mostrando las columnas de la tabla Rutas
select * from Rutas;
go

-- Creando un procedimiento almacenado para insertar una Ruta
CREATE PROCEDURE InsertarRuta
    @DonacionID INT,
    @Conductor NVARCHAR(100),
    @Vehiculo NVARCHAR(50),
    @FechaInicio DATETIME,
    @FechaFin DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Rutas (DonacionID, Conductor, Vehiculo, FechaInicio, FechaFin, Estado)
    VALUES (@DonacionID, @Conductor, @Vehiculo, @FechaInicio, @FechaFin, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar rutas por Estado
CREATE PROCEDURE ObtenerRutasPorEstado
    @Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Rutas WHERE Estado = @Estado;
END;
GO 

-- Eliminación de la base de datos 
-- DROP DATABASE ProyectoDP_FoodChain
