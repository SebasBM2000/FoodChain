-- Abriendo la base de datos del sistema
use master
go

-- Creando la base de datos del proyecto
create database ProyectoDP_FoodChain
go

-- Abriendo la base de datos del proyecto
use ProyectoDP_FoodChain
go

-- Cambiando el formato de la fecha (dia, mes, año)
set dateformat dmy
go

/*
-- Nos aseguramos de que no haya conexiones activas a la base de datos, ya que SQL Server no permitirá eliminarla si está en uso
ALTER DATABASE ProyectoDP_FoodChain SET SINGLE_USER WITH ROLLBACK IMMEDIATE;

-- Comando para eliminar la base de datos
DROP DATABASE ProyectoDP_FoodChain;
*/

-- Creando las tablas

/* Tabla Usuarios: Esta tabla almacenará los datos de los usuarios del sistema (supermercados, restaurantes, hogares, organizaciones sin fines 
de lucro, etc.*/
CREATE TABLE Usuarios (
    UsuarioID INT PRIMARY KEY IDENTITY,
    Nombre NVARCHAR(100),
    TipoUsuario NVARCHAR(50), -- Supermercado, Restaurante, Hogar, Organización
    Email NVARCHAR(100),
    Telefono NVARCHAR(20),
    Direccion NVARCHAR(255)
);
go

-- Ingresando valores a la tabla Usuarios
INSERT INTO Usuarios (Nombre, TipoUsuario, Email, Telefono, Direccion) VALUES 
('Supermercado A', 'Supermercado', 'contacto@supera.com', '987654321', 'Av. Principal 123'),
('Restaurante B', 'Restaurante', 'info@restauranteb.com', '987654322', 'Calle Secundaria 456'),
('Hogar C', 'Hogar', 'hogarc@gmail.com', '987654323', 'Calle Terciaria 789'),
('ONG Alimentos', 'Organización', 'contacto@ongalimentos.org', '987654324', 'Av. Solidaridad 101'),
('Banco de Alimentos D', 'Organización', 'info@bancoalimentosd.org', '987654325', 'Av. Recojo 202'),
('Restaurante E', 'Restaurante', 'info@restaurantee.com', '987654326', 'Calle Progreso 303'),
('Supermercado F', 'Supermercado', 'contacto@superf.com', '987654327', 'Av. Victoria 404'),
('ONG Solidaridad', 'Organización', 'info@ongsolidaridad.org', '987654328', 'Av. Comunidad 505'),
('Hogar G', 'Hogar', 'hogarg@gmail.com', '987654329', 'Calle Esperanza 606'),
('Restaurante H', 'Restaurante', 'info@restauranteh.com', '987654330', 'Av. Sazón 707');

-- Mostrando las columnas de la tabla Usuarios
select * from Usuarios;
go

-- Creando un procedimiento almacenado para insertar un Usuario
CREATE PROCEDURE InsertarUsuario
    @Nombre NVARCHAR(100),
    @TipoUsuario NVARCHAR(50),
    @Email NVARCHAR(100),
    @Telefono NVARCHAR(20),
    @Direccion NVARCHAR(255)
AS
BEGIN
    INSERT INTO Usuarios (Nombre, TipoUsuario, Email, Telefono, Direccion)
    VALUES (@Nombre, @TipoUsuario, @Email, @Telefono, @Direccion);
END;
GO


/* Tabla Excedentes: Esta tabla almacenará los alimentos excedentes que serán donados.*/
CREATE TABLE Excedentes (
    ExcedenteID INT PRIMARY KEY IDENTITY,
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    Descripcion NVARCHAR(255),
    Cantidad DECIMAL(10, 2),
    UnidadMedida NVARCHAR(50), -- Kg, Litros, etc.
    FechaCreacion DATETIME,
    FechaCaducidad DATETIME,
    Estado NVARCHAR(50) -- Disponible, Asignado, Entregado.
);
go

-- Ingresando valores a la tabla Excedentes
INSERT INTO Excedentes (UsuarioID, Descripcion, Cantidad, UnidadMedida, FechaCreacion, FechaCaducidad, Estado) VALUES
(1, 'Tomate fresco', 50, '15 kg', '01-09-2024', '05-09-2024', 'Disponible'),
(2, 'Pan del día', 30, '250 g', '01-09-2024', '02-09-2024', 'Disponible'),
(3, 'Botella de leche Pasteurizada', 100, ' 102 litros', '02-09-2024', '08-09-2024', 'Asignado'),
(1, 'Carne de Res', 20, '36 kg', '03-09-2024', '05-09-2024', 'Disponible'),
(4, 'Frutas variadas', 75, ' 16 kg', '03-09-2024', '10-09-2024', 'Disponible'),
(5, 'Verduras variadas', 40, '19 Kg', '04-09-2024', '08-09-2024', 'Disponible'),
(6, 'Sopa en lata', 200, '220 litros', '04-09-2024', '30-12-2024', 'Disponible'),
(7, 'Saco de harina de trigo', 150, '400 kg', '05-09-2024', '15-09-2024', 'Disponible'),
(8, 'Pollo', 25, '57 kg', '06-09-2024', '10-09-2024', 'Disponible'),
(9, 'Queso napolitano', 50, ' 55 kg', '07-09-2024', '12-09-2024', 'Disponible');

-- Mostrando las columnas de la tabla Excedentes
select * from Excedentes;
go

-- Creando un procedimiento almacenado para insertar un Excedente
CREATE PROCEDURE InsertarExcedente
    @UsuarioID INT,
    @Descripcion NVARCHAR(255),
    @Cantidad DECIMAL(10, 2),
    @UnidadMedida NVARCHAR(50),
    @FechaCreacion DATETIME,
    @FechaCaducidad DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Excedentes (UsuarioID, Descripcion, Cantidad, UnidadMedida, FechaCreacion, FechaCaducidad, Estado)
    VALUES (@UsuarioID, @Descripcion, @Cantidad, @UnidadMedida, @FechaCreacion, @FechaCaducidad, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar excedentes por Estado
CREATE PROCEDURE ObtenerExcedentesPorEstado
	@Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Excedentes WHERE Estado = @Estado;
END;
GO


/* Tabla Donaciones: Esta tabla almacena las donaciones emparejadas entre los donadores (usuarios que tienen excedentes) y las organizaciones 
receptoras.*/
CREATE TABLE Donaciones (
    DonacionID INT PRIMARY KEY IDENTITY,
    ExcedenteID INT FOREIGN KEY REFERENCES Excedentes(ExcedenteID),
    OrganizacionID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    FechaAsignacion DATETIME,
    FechaRecoleccion DATETIME,
    Estado NVARCHAR(50) -- Asignado, Recolectado.
);
go

-- Ingresando valores a la tabla Donaciones
INSERT INTO Donaciones (ExcedenteID, OrganizacionID, FechaAsignacion, FechaRecoleccion, Estado) VALUES
(1, 4, '01-09-2024', '02-09-2024', 'Asignado'),
(2, 5, '02-09-2024', '03-09-2024', 'Recolectado'),
(3, 4, '03-09-2024', '04-09-2024', 'Recolectado'),
(4, 5, '03-09-2024', '04-09-2024', 'Asignado'),
(5, 4, '04-09-2024', '05-09-2024', 'Recolectado'),
(6, 5, '04-09-2024', '06-09-2024', 'Recolectado'),
(7, 4, '05-09-2024', '06-09-2024', 'Asignado'),
(8, 5, '06-09-2024', '07-09-2024', 'Recolectado'),
(9, 4, '07-09-2024', '08-09-2024', 'Recolectado'),
(4, 5, '08-09-2024', '09-09-2024', 'Asignado');

-- Mostrando las columnas de la tabla Donaciones
select * from Donaciones;
go

-- Creando un procedimiento almacenado para insertar una Donación
CREATE PROCEDURE InsertarDonacion
    @ExcedenteID INT,
    @OrganizacionID INT,
    @FechaAsignacion DATETIME,
    @FechaRecoleccion DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Donaciones (ExcedenteID, OrganizacionID, FechaAsignacion, FechaRecoleccion, Estado)
    VALUES (@ExcedenteID, @OrganizacionID, @FechaAsignacion, @FechaRecoleccion, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar donaciones por Estado
CREATE PROCEDURE ObtenerDonacionesPorEstado
    @Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Donaciones WHERE Estado = @Estado;
END;
GO


/* Tabla Recompensas: Almacena las recompensas asignadas a los usuarios en función de sus donaciones. Los puntos otorgados se calculan en base 
a la cantidad de alimentos donados, y cada recompensa está vinculada a una donación específica y a un usuario.*/
CREATE TABLE Recompensas (
    RecompensaID INT PRIMARY KEY IDENTITY,
    DonacionID INT FOREIGN KEY REFERENCES Donaciones(DonacionID),
    UsuarioID INT FOREIGN KEY REFERENCES Usuarios(UsuarioID),
    Puntos INT, -- Los puntos se calcularán en base a la cantidad donada
    FechaOtorgacion DATETIME
);
go

-- Ingresando valores a la tabla Recompensas
INSERT INTO Recompensas (DonacionID, UsuarioID, Puntos, FechaOtorgacion) VALUES
(1, 1, 500, '02-09-2024'),
(2, 2, 300, '03-09-2024'),
(3, 3, 300, '04-09-2024'),
(4, 4, 200, '05-09-2024'),
(5, 5, 800, '06-09-2024'),
(6, 6, 150, '07-09-2024'),
(7, 7, 450, '08-09-2024'),
(8, 8, 600, '09-09-2024'),
(9, 9, 350, '10-09-2024'),
(10, 10, 710, '11-09-2024');

-- Mostrando las columnas de la tabla Recompensas
select * from Recompensas;
go

-- Creando un procedimiento almacenado para insertar una Recompensa
CREATE PROCEDURE InsertarRecompensa
    @DonacionID INT,
    @UsuarioID INT,
    @Puntos INT,
    @FechaOtorgacion DATETIME
AS
BEGIN
    INSERT INTO Recompensas (DonacionID, UsuarioID, Puntos, FechaOtorgacion)
    VALUES (@DonacionID, @UsuarioID, @Puntos, @FechaOtorgacion);
END;
GO

-- Creando un procedimiento almacenado para consultar recompensas de un Usuario.
CREATE PROCEDURE ObtenerRecompensasPorUsuario
    @UsuarioID INT
AS
BEGIN
    SELECT * FROM Recompensas WHERE UsuarioID = @UsuarioID;
END;
GO


/*Tabla DetallesDeRecompensas: Define los rangos de puntos necesarios para obtener diferentes tipos de recompensas, ya sean físicas o no físicas. 
Cada rango tiene un intervalo de puntos y describe el tipo y la naturaleza de la recompensa.*/
CREATE TABLE DetallesDeRecompensas (
    DetallesID INT PRIMARY KEY IDENTITY,
    MinPuntos INT, -- Mínimo de puntos requerido para obtener la recompensa
    MaxPuntos INT, -- Máximo de puntos que puede cubrir este rango
    TipoRecompensa NVARCHAR(50), -- Física o No Física
    Descripcion NVARCHAR(255) -- Descripción de la recompensa
);
go

-- Ingresando valores a la tabla RangosDeRecompensas
INSERT INTO DetallesDeRecompensas (MinPuntos, MaxPuntos, TipoRecompensa, Descripcion) VALUES
(0, 100, 'No Física', 'Mención en la página web'),
(101, 300, 'Física', 'Bolsa reutilizable'),
(301, 500, 'Física', 'Cuaderno ecológico'),
(501, 700, 'Física', 'Camisa personalizada de FoodChain'),
(701, 1000, 'Física', 'Kit de cocina sostenible'),
(1001, 1300, 'No Física', 'Descuento del 25% en 3 productos de tu elección en la tienda en línea'),
(1301, 1800, 'Física', 'Certificado de agradecimiento + 2 productos gratis al azar de la tienda en línea'),
(1801, 2500, 'Física', 'Canastón de productos orgánicos + 1 producto gratis al azar de la tienda en línea'),
(2501, 3200, 'No Física', 'Acceso a 1 evento presencial de FoodChain');

-- Mostrando las columnas de la tabla RangosDeRecompensas
select * from DetallesDeRecompensas;
go

-- Creando un procedimiento almacenado para consultar rangos de recompensas por el Tipo de Recompensa
CREATE PROCEDURE ObtenerRangosPorTipoDeRecompensa
	@TipoRecompensa NVARCHAR(50)
AS
BEGIN
	SELECT * FROM DetallesDeRecompensas WHERE TipoRecompensa = @TipoRecompensa;
END;
GO


/* Tabla Rutas: Esta tabla gestionará las rutas de distribución de alimentos.*/
CREATE TABLE Transporte (
    RutaID INT PRIMARY KEY IDENTITY,
    DonacionID INT FOREIGN KEY REFERENCES Donaciones(DonacionID),
	Vehiculo NVARCHAR(50),
    Conductor NVARCHAR(100),
    FechaInicio DATETIME,
    FechaFin DATETIME,
    Estado NVARCHAR(50) -- Planificado, En Progreso, Completado
);
go

-- Ingresando valores a la tabla Rutas
INSERT INTO Transporte (DonacionID, Vehiculo, Conductor, FechaInicio, FechaFin, Estado) VALUES
(1, 'Camión 123', 'Juan Pérez', '02-09-2024', '02-09-2024', 'Completado'),
(2, 'Camión 456', 'Luis Gómez', '03-09-2024', '03-09-2024', 'Completado'),
(3, 'Camión 789', 'Pedro Ramírez', '04-09-2024', '04-09-2024', 'Completado'),
(4, 'Camioneta 321', 'Carlos Díaz', '05-09-2024', '05-09-2024', 'En Progreso'),
(5, 'Camioneta 654', 'Miguel Torres', '06-09-2024', '06-09-2024', 'Planificado'),
(6, 'Camión 987', 'José Santos', '07-09-2024', '07-09-2024', 'Planificado'),
(7, 'Furgón 111', 'Ricardo Flores', '08-09-2024', '08-09-2024', 'Completado'),
(8, 'Furgón 222', 'María Castro', '09-09-2024', '09-09-2024', 'Completado'),
(9, 'Camión 333', 'Ana Morales', '10-09-2024', '10-09-2024', 'En Progreso'),
(10, 'Camioneta 444', 'Roberto Pérez', '11-09-2024', '11-09-2024', 'Planificado');

-- Mostrando las columnas de la tabla Rutas
select * from Transporte;
go

-- Creando un procedimiento almacenado para insertar una Ruta
CREATE PROCEDURE InsertarTransporte
    @DonacionID INT,
	@Vehiculo NVARCHAR(50),
    @Conductor NVARCHAR(100),
    @FechaInicio DATETIME,
    @FechaFin DATETIME,
    @Estado NVARCHAR(50)
AS
BEGIN
    INSERT INTO Transporte (DonacionID, Vehiculo, Conductor, FechaInicio, FechaFin, Estado)
    VALUES (@DonacionID, @Vehiculo, @Conductor, @FechaInicio, @FechaFin, @Estado);
END;
GO

-- Creando un procedimiento almacenado para consultar rutas por Estado
CREATE PROCEDURE ObtenerTransportePorEstado
    @Estado NVARCHAR(50)
AS
BEGIN
    SELECT * FROM Transporte WHERE Estado = @Estado;
END;
GO
